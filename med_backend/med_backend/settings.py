"""
Django settings for med_backend project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from pymongo import MongoClient
import ssl
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


MONGO_URI = "mongodb+srv://sajagaga2806:medicaldb@medicaldb.j9hdg.mongodb.net/"
client = MongoClient(MONGO_URI,ssl=True,
    tlsAllowInvalidCertificates=True)

# Define clusters (collections)
db = client["Medical"]
patients_collection = db["Patients_Data"]
records_collection = db["Patient_Records"]
appointment_history=db["Appointment_History"]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x#oir%j8@d_@1d_6h9-a*z220%sqan2m0sq66$5$@3_k8p=@#v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["doctor-connect-backend.onrender.com"]


# Application definition

INSTALLED_APPS = [
    "corsheaders",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "rest_framework",
    "rest_framework_simplejwt",
    "pateints"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),

} 
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # For Vite
    "http://localhost:3000",  # For CRA
]


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),  # Token valid for 1 day
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),  # Refresh token valid for 7 days
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}
SESSION_ENGINE =  "django.contrib.sessions.backends.db"

SESSION_COOKIE_AGE = 86400  # 1 day
SESSION_SAVE_EVERY_REQUEST = True
ROOT_URLCONF = 'med_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'med_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Default
SESSION_COOKIE_AGE = 86400  # 1 day session expiration time
SESSION_SAVE_EVERY_REQUEST = True  # Save session data every request

# Optionally, you can set a unique session key for each user
SESSION_COOKIE_NAME = 'sessionid' 
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Email settings for sending emails via SMTP
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-relay.brevo.com'  # For Gmail, or use your SMTP server's host
EMAIL_PORT = 587  # For Gmail, use 587 for TLS
EMAIL_USE_TLS = True  # Use TLS
EMAIL_HOST_USER = '852cae001@smtp-brevo.com'  # Your email
EMAIL_HOST_PASSWORD = 'BsxdRHzv0kZaN2cn'  # Your email password (or use App password for Gmail)
DEFAULT_FROM_EMAIL = '852cae001@smtp-brevo.com'
EMAIL_USE_TLS = True
EMAIL_SSL_CERTFILE = None
EMAIL_SSL_KEYFILE = None


# CELERY_BROKER_URL = "rediss://QgCiW47kW3TTIQUZ61EyLuPyAAALPVSl@redis-13786.c90.us-east-1-3.ec2.redns.redis-cloud.com:13786/0"

# CELERY_APP = 'pateints.celery'
